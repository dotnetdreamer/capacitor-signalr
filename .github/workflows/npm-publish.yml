name: Build and Publish to NPM

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
        - patch
        - minor
        - major

# Add permissions for the GITHUB_TOKEN. We needed for 'Commit version changes'
permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          
      - name: Install dependencies
        run: npm i
        
      - name: Build
        run: npm run build
     
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: capacitor-signalr
          path: ./dist

  publish:
    needs: build
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org/'
      
      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git pull origin ${{ github.ref_name }}
          
      - name: Bump package version
        id: bump_version
        run: |
          OLD_VERSION=$(node -p "require('./package.json').version")
          npm version ${{ github.event.inputs.release_type }} --no-git-tag-version
          NEW_VERSION=$(node -p "require('./package.json').version")
          echo "old_version=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
          if [ "$OLD_VERSION" = "$NEW_VERSION" ]; then
            echo "Version was not changed"
            exit 1
          fi
        
      - name: Commit version changes
        run: |
          git add .
          git commit -m "Bump version to v${{ steps.bump_version.outputs.new_version }} [skip ci]"
          git push origin ${{ github.ref_name }}
          
      - name: Create git tag
        run: |
          git tag v${{ steps.bump_version.outputs.new_version }}
          git push origin v${{ steps.bump_version.outputs.new_version }}
      
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: capacitor-signalr
          path: ./dist
      
      - name: Install dependencies
        run: npm i
      
      - name: Verify build artifacts
        run: |
          if [ ! -d "./dist" ] || [ -z "$(ls -A ./dist)" ]; then
            echo "Build artifacts not found or empty"
            exit 1
          fi
          echo "Build artifacts verified"
          
      - name: Publish to NPM
        run: npm publish --access public --tag latest
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
